
# C++ project
language: cpp

# Only build master and tags
if: branch = master OR tag IS present

git:
    submodules: true

env:
  global:
    # Bintray
    - BINTRAY_USER=manromen
    # BINTRAY_KEY
    - secure: enuYcOc0CGFm+jSJPd7ogt6qZnrRV0G6JCejUdzYtlG05Ce/4e6IFSfQDIqyu0Lbgu9ypbk4Yg3cS8ZUu6ZUIMD86L9dgKOua++flFgkZYX2xhuD/8eCSKc12JsJwKx9i4NhHVU7JiD8MXPfY+KVmzrZ1FCI2VFFv9Qk0UlN92vJc9JsppuNlbOr6B48XNC4PE6Cwp/hwEn0/dUhH9yCGhBwluqT6JdSx06b0gZtuKMKzrdYFNayH8xX6CNDiJrlqY87jvccWCEMUBmxlrrjUCq1wJmKZZQtlYD+drFBCJ5MWB/sWsieUZYv82vZr1i716y9ASQpSn1lwascdVU+hIjg3+uoX9DIfacKRG+uqNRFDm0xyd/O8tCuBBmFA3u5HfnHxrRtZ2Vh76jy8S08vauwixFm8CY7FJhC068UU9YU9faEaYipkJwUmqOoAClRuVq/fG9tsHVjEisFxZ/Mzx6QLgy1vtw5KErKSYAePMyZ5se4UpHI1NxvC2v6MSgy750PH+w+nAM9aUqLZoAmaaRsrtJHN3xAiFI3wm/lZ4sp38Mi/Xzg4gpLdyMmemLKSTbhvxas35dtz7sD7fjY0vMMpHcE1SsiB+x1ru5sHqULxOI4nmDNVvUumPLiAHYO8KgvD3ik2BKidmLyXxCt02Lcpw57TFkPKD8snSAoiHg=
    
    # Conan
    - CONAN_REPOSITORY=https://api.bintray.com/conan/manromen/rgpaul
    - CONAN_REPOSITORY_NAME=rgpaul
    - CONAN_USER=rgpaul
    - CONAN_CHANNEL=stable
    - CONAN_LIBRARY_VERSION=7.65.3
    - CONAN_PACKAGE_NAME=curl

### before installing deps
before_install:
  # Download Android NDK from Google
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TARGET_PLATFORM" == "android" ]]; then
      curl -sSOL "https://dl.google.com/android/repository/android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip";
      unzip -q -o android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip;
      export ANDROID_NDK_PATH=${TRAVIS_BUILD_DIR}/android-ndk-${TRAVIS_ANDROID_NDK_VERSION};
    fi

### install deps
install:

    # Install conan (linux)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip install conan --user;
    fi

  # Install conan (macos)
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip3 install conan;
    fi

  # Add conan repository and apply conan config
  - conan remote add ${CONAN_REPOSITORY_NAME} ${CONAN_REPOSITORY}
  - conan config install ${TRAVIS_BUILD_DIR}/.travis/conan/config.zip

  # login to conan
  - conan user -p "$BINTRAY_KEY" -r ${CONAN_REPOSITORY_NAME} ${BINTRAY_USER}

### build script
script:
  # show OS/compiler version
  - uname -a

  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # Android Builds
  - if [ "$TARGET_PLATFORM" == "android" ]; then
      conan create . ${CONAN_PACKAGE_NAME}/${CONAN_LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=Android -s os.api_level=${TRAVIS_ANDROID_API_LEVEL} -s compiler=${TRAVIS_ANDROID_COMPILER} -s compiler.version=${TRAVIS_ANDROID_COMPILER_VERSION} -s compiler.libcxx=${TRAVIS_ANDROID_COMPILER_LIBCXX} -s build_type=${TARGET_BUILD_TYPE} -o android_ndk=${TRAVIS_ANDROID_NDK_VERSION} -o android_stl_type=${TRAVIS_ANDROID_STL_TYPE} -s arch=${TRAVIS_ANDROID_ARCH} -o shared=False;
    fi

  # iOS Builds
  - if [ "$TARGET_PLATFORM" == "ios" ]; then
      export IOS_SDK_VERSION=$(xcodebuild -showsdks | grep iphoneos | awk '{print $4}' | sed 's/[^0-9,\.]*//g');
      echo "iOS SDK ${IOS_SDK_VERSION}";
      conan create . ${CONAN_PACKAGE_NAME}/${CONAN_LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=iOS -s os.version=${IOS_SDK_VERSION} -s arch=${TARGET_ARCH} -s build_type=${TARGET_BUILD_TYPE} -o shared=False;
    fi

deploy:
  provider: script
  script: bash .travis/provider/conan-deploy.sh
  on:
    tags: true

### build matrix
matrix:
  include:
    
    # iOS - Release
    - os: osx
      osx_image: xcode11.1
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=armv8
        - TARGET_BUILD_TYPE=Release

    # iOS - Debug
    - os: osx
      osx_image: xcode11.1
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=armv8
        - TARGET_BUILD_TYPE=Debug

    # iOS - Simulator
    - os: osx
      osx_image: xcode11.1
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=x86_64
        - TARGET_BUILD_TYPE=Debug

    ### Android NDK r20 - arm64-v8a ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=armv8
        - TRAVIS_ANDROID_API_LEVEL=21
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - armeabi-v7a ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=armv7
        - TRAVIS_ANDROID_API_LEVEL=19
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - x86 ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=x86
        - TRAVIS_ANDROID_API_LEVEL=19
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - x86_64 ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=x86_64
        - TRAVIS_ANDROID_API_LEVEL=21
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]
